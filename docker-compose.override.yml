version: "3.8"

services:
  reverse-proxy:
    command:
      # Enable docker
      - --providers.docker
      # Disable swarm mode for dev environment as we use docker-compose
      # - --providers.docker.swarmMode=true
      # Add a constraint to only use services with the label for this stack
      # from the env var TRAEFIK_TAG
      - --providers.docker.constraints=Label(`traefik.constraint-label-stack`, `traefik-public`)
      # Do not expose all Docker services, only the ones explicitly exposed
      - --providers.docker.exposedbydefault=false
      # Enable the access log, with HTTP requests
      - --accesslog
      # Enable the Traefik log, for configurations and errors
      - --log
      # Enable the Dashboard and API
      - --api
      # Enable the Dashboard and API in insecure mode for local development
      - --api.insecure=true
    ports:
      - 80:80
      - 443:443
      - 8090:8080
    labels:
      - traefik.enable=true
      - traefik.http.routers.ecommerce-analyzer-reverse-proxy-http.rule=Host(`${DOMAIN?Variable not set}`) || Host(`www.${DOMAIN?Variable not set}`)
      - traefik.http.services.ecommerce-analyzer-reverse-proxy.loadbalancer.server.port=80

  db:
    volumes:
      - ecommerce-analyzer-db-dev:/var/lib/postgresql/data/pgdata
    env_file:
      - env/dev.env

  pgadmin:
    ports:
      - 5050:5050
    env_file:
      - env/dev.env

  analyzer:
    ports:
      - 8888:8888
    env_file:
      - env/dev.env
    labels:
      - traefik.enable=true
      - traefik.constraint-label-stack=traefik-public
      - traefik.http.routers.ecommerce-analyzer-http.rule=PathPrefix(`/`)
      - traefik.http.services.ecommerce-analyzer.loadbalancer.server.port=80

networks:
  traefik-public:
    external: false

volumes:
  ecommerce-analyzer-db-dev:
